*galaxy.txt*         Galaxy          Makes scheming colors easier.

  
                     ______      __                                    ~
                    / ____/___ _/ /___ __  ____  __                    ~
                   / / __/ __ `/ / __ `/ |/_/ / / /                    ~
                  / /_/ / /_/ / / /_/ />  </ /_/ /                     ~
                  \____/\__,_/_/\__,_/_/|_|\__, /                      ~
                                          /____/                       ~
                             ver:1.3                                   ~
                             
------------------------------------------------------------------------------
CONTENTS                                         *galaxy-contents*
1. Intro                                         |galaxy-intro|
2. Install                                       |galaxy-install|
3. Commands                                      |galaxy-commands|
4. Developer                                     |galaxy-developer|
==============================================================================
INTRO                                               *galaxy-intro*

    *galaxy* is a colorscheme that makes scheming colors easier.
    
    To use:
        :colorscheme galaxy

    To choose:     
        :Galaxy 


    Screenshot: http://rykka.is-programmer.com/posts/31819
    Post issues: https://github.com/Rykka/vim-galaxy

    NOTE: ColorV required if download from github.
          https://github.com/Rykka/ColorV
    
------------------------------------------------------------------------------
QUICKSTART                                          *galaxy-quickstart*

    Load galaxy~
        :colorscheme galaxy
        Put it in your vimrc to keep on using it.

    NOTE    Your current scheme is cached on your disk.
            set |g:galaxy_cache_File| with proper place if errors occurs.
            If you can not write/read cache.
            use ':GalaxyLoad {scheme}' to load designate scheme.
        
    Open galaxy manager window~
        :Galaxy
        Default mapping is <leader>gll

        Then you can choose/edit/generate/delete schemes in it.

        
                                                        *galaxy-new*
    Generate new schemes~
        :GalaxyNew
        Default mapping is <leader>gln

        Input your scheme's name.
        Then a ColorV windows is opended for choosing background color.
        Choose one and then press 'q' to quit the window. 
        Your scheme is auto generated.
                                                        *galaxy-load*
    Load schemes~
        :GalaxyLoad {scheme}

        Load designate scheme with scheme name.

                                                        *galaxy-edit*
                                                        *galaxy-color*
    Edit your scheme Color~
        To edit, Move cursor to the color, Then press 'e'
        A ColorV window is opened for choosing your color.
        Press 'q' to quit the window and make the change. 

        There are 5 basic colors for generating all highlight colors.

        They are 'bgd' 'fgd' 'syn' 'msg' 'dif'
            'bgd' for background colors and line/column/... colors.
            'fgd' for foreground colors and line/column/... colors.
            'syn' for syntax colors. 
            'msg' for Mode/Warning/Error/... messages colors.
            'dif' for diff mode colors.

    NOTE     'bgd' and 'fgd' colors are used with
             colorv#list_gen(hex,"Value")
             'syn' 'msg' 'dif' colors are used with
             colorv#yiq_list_gen(hex,"Hue")
             see |colorv-generate| for more info.
                                                        
                                                        *galaxy-style*
    Styles of schemes~
        While editing scheme, you can change the scheme style.
        There are currently 3 styles:
            GALAXY: The default style.
            SHADOW: Less Colorful.
            COLOUR: More Colorful.
            ABOUND: More Colorful in another way.

                                                        *galaxy-generate*
    Generate schemes with colorlist~
        First open ColorV colorname list by :ColorVlist (<leader>cl)
        Make sure cursor is inside this window. 
        Then press ':GalaxyAuto' (<leader>gla)
        All colorname inside (100+) will be generated to schemes.

    NOTE    You can use ColorV to generate more colorlist.
            For example:  
            '<leader>cg1' on '#ff0000' will generate a Monochromatic list
            see |colorv-mapping-generate| for more details.

    NOTE    Generated schemes are stored to disk. 
            set |g:galaxy_store_Folder| if errors occured.

    Delete schemes~
        move cursor in the galaxy window. 
        press 'dd'.
        The scheme will be deleted.
                                                        *galaxy-terminal*
    With Terminal~
        Works fine with 256 Terminal and use predefined scheme in 16 and 8 .
        You should check if your '&t_Co' option if it's not working properly.

    NOTE    Terminal scheme in 8/16 terminal color is predefined.

    NOTE    Terminal cursor is not fully tested in all OS.
            And only support "xterm\rxvt\screen\TMUX" till now.
            Please report issues with "OS,vim version,&t_Co,&term"
            at https://github.com/Rykka/vim-galaxy/issues 


                                                *galaxy-indent-highlight*
    Highlight Indent~
        To highlight the indents of current file.
        :GalaxyHigh (<leader>glh)
        
        set |g:galaxy_indent_hl_pos| to show highlight in end or start.
        with |g:galaxy_highlight_indent| |g:galaxy_indent_hl_file| 
        you can set the to auto highlight indent in these filetype.

        The mixed white space and tab will be showing as Error. 
        e.g.: '^\t  \t'

        |g:galaxy_show_trailing_ws| will showing the trailing white space as 
        errors. 

                                                *galaxy-statusline-blink*
    Highlight Stautsline in Insert-Mode.~
        This will reverse the statusline color when enter insert mode.
        set |g:galaxy_statusline_blink| to 0 to disable it.
        
    NOTE    The hl-User1 ~ hl-User9 color is auto generated.
            You can use them to have different color in statusline.
    e.g.:
>
    set statusline=%2*%n.%*[%03l,%02c,%P]%<%F%1*%m%r%*\%=[%{&enc},%{&ff}]
<

    for style 'COLOUR' And 'ABOUND'.
    hl-StatusLine is Colourful .
    hl-StatusLineNC is in dim color.
    hl-USER1 ~ hl-USER5 is shading Background color.
    hl-USER6 ~ hl-USER9 is Colorful color with gradual change.
    You can use:
>
    set statusline=%*\ %{mode()}\ %6*%m%r%1*%<%F\%=%2*\ %03l\|%3*%02c\ \%4*\ %P\ 
<
    To get an effect Similar to PowerLine.vim
    See |'statusline'| for more details.

==============================================================================
INSTALL                                          *galaxy-install*

1.Using [Vundle.vim](Recommend):~
    https://github.com/gmarik/vundle
    After installed vundle and git. Add this line to your vimrc  
    `Bundle 'Rykka/vim-galaxy'` 
    `Bundle 'Rykka/ColorV'` 
    Run `:BundleInstall` to install.
    And update them easily by `:BundleInstall!`
 
2.Using [Galaxy on Vim.org]~
    Download the latest version of tar.gz file, which contains ColorV
    http://www.vim.org/scripts/script.php?script_id=3729
    Extract to $VIMFILE folder. 
    ("~/.vim" for linux. "$HOME/vimfiles" for windows)
    Generate helptags. `:helptags ~/.vim/doc
    
    NOTE   You can always get the latest version at
           https://github.com/Rykka/vim-galaxy/
==============================================================================
COMMANDS                                              *galaxy-commands*
    
    :Galaxy     (default: <leader>gll)      Open Galaxy window.
    :GalaxyHigh (default: <leader>glh)      Highlight Indent in buffer.
    :GalaxyNext (default: <leader>glt)      Next Galaxy scheme.
    :GalaxyLoad {scheme}                    Load Galaxy scheme {scheme}.
    :GalaxyPrev (default: <leader>glp)      Prev Galaxy scheme.
    :GalaxyNew  (default: <leader>gln)      Create new scheme.
    :GalaxyAuto (default: <leader>gla)      Generate schemes with color-list in
                                            buffer. see |galaxy-generate|

OPTIONS                                               *galaxy-options*

    NOTE: All options must be put before executing ':colorscheme galaxy'

                                                *g:galaxy_tcursor_color*
    'g:galaxy_tcursor_color'                    (default:"DarkGray")
    The terminal cursor color to be set after exit vim.
    The |cterm-colors| names can be used.

    Colorful indenting.~
                                                *g:galaxy_highlight_indent*
    'g:galaxy_highlight_indent'                 (default:1)
    Enable highlight indent.

                                                *g:galaxy_indent_hl_pos*
    'g:galaxy_indent_hl_pos'                    (default:"start")
    The highlight position in indent highlight.
    if set to "end", will highlight at each indent end.
    NOTE    the tab '\t' will be always highlighted entirely.
    
                                                *g:galaxy_indent_hl_file*
    'g:galaxy_indent_hl_file'                   ("python,c,javascript")
    Enable auto indent highlight with filetype.

                                                *g:galaxy_show_trailing_ws*
    'g:galaxy_show_trailing_ws'                 (default:1)
    Enable showing trailing white space as indentError 
    if indent_highlight is ON.   


    StatusLine with different color between INSERT/NORMAL mode.~
                                                *g:galaxy_statusline_blink*
    'g:galaxy_statusline_blink'                 (default:1)
    Enable statusline blink while InsertEnter and InsertLeave.
    

    Load predefined syntax tuning.~
                                                *g:galaxy_load_syn_dict*
    'g:galaxy_load_syn_dict'                    (default:1)
    Enable loading galaxy predefined syntax link of several filetypes.

                                                *g:galaxy_load_syn_tune*
    'g:galaxy_load_syn_tune'                    (default:1)
    Enable loading galaxy predefined syntax tuning of several filetypes.
    currently only vim , highlight it's 'endfunction' part with 'Function'.

    Transparent hl-Visual foreground.~
                                                *g:galaxy_hl_visual_fg*
    'g:galaxy_hl_visual_fg'                    (default:0)
    By default the Visual-foreground color will be transparent.
    if set to 1, will use current background color to hightlight it.

    Storing and Caching.~
                                                *g:galaxy_store_Folder*
    'g:galaxy_store_Folder'     (default:
                                for Win: "$HOME\vimfiles\colors\galaxy\"
                                or "$VIM\vimfiles\colors\galaxy\"
                                for Unix: "$HOME/vimfiles/colors/galaxy/")
    The Folder for store galaxy generated schemes.

                                                *g:galaxy_cache_File*

    'g:galaxy_cache_File'       (default:
                                for Win: "$HOME\.vim_galaxy_cache"
                                or "$VIM\.vim_galaxy_cache"
                                for Unix: "$HOME/.vim_galaxy_cache")
    The File for caching current schemes.

==============================================================================
DEVELOPER                                             *galaxy-developer*

    |Galaxy| is develped by Rykka |<Rykka10(at)gmail.com>|.

    Thanks to lilydjwg for script to support Terminal cursor(Enter/Leave).
   
------------------------------------------------------------------------------
HISTORY                                               *galaxy-history*

"1.3.0~
"  DONE: 120301 g:galaxy_hl_visual_fg
"  DONE: 120301 g:galaxy_tcursor_color
"  DONE: 120403 g:galaxy_load_syn_tune
"  DONE: 120403 More color and style difference in default syntax group.
"  DONE: 120403 make Statusline like PowerLine.vim in style: 'COLOUR/ABOUND'

"1.2.0 Spring Festival~
"  DONE: 120123  add g:galaxy_indent_hl_pos , set default to "satrt"
"  DONE: 120121  tuned built-in schemes and term schemes.
"  DONE: 120120  fix and add scheme styles.
"  DONE: 120120  rewrite help doc.
"  DONE: 120120  add options g:galaxy_...
"  DONE: 120119  add indent highlight.

"1.1.0~
"  DONE: 110911  tuning built-in colors and auto-gen method
"  DONE: 110911  update intro and intro pics.
" FIXED: 110911  fix galaxy window color group
"  DONE: 110910  term_color rewrite
" FIXED: 110910  the fold line is confused with linenum.
"  DONE: 110910  move color/. to autoload/. support call without load scheme.
" FIXED: 110910  cache_num is useless.rmved
"  DONE: 110910  input fg/bg/NONE with nocheck 
"  DONE: 110905  set undercurl to reverse_error in terminal mode

"1.0.0
"  DONE: 110902  error of background lightness output 
"  DONE: 110901  add guisp for undercurl
"  DONE: 110829  use yiq_list_gen to define syntax/msg/dif colors
"  DONE: 110828  blue color brighteness compensate +
"                by using the 'yiq' space
"  DONE: 110820  1! color => 5 color
"  DONE: 110819  add more hue in difclr
"  DONE: 110815  use ColorV picker
"  DONE: 110809  presistence files write with command
"  DONE: 110809  the file sequence maybe different
"  DONE: 110809  load by s:cache_name 
"  DONE: 110809  load theme with specified name
"  DONE: 110809  the background-colored color is too little. add bgrhue
                 it's hue to background
"  DONE: 110808  pcterm/xterm/cygwin... support
"  DONE: 110808  set with presistence file
"  DONE: 110805  deprecating using g:. using serialzd file instead.
"  DONE: 110805  show scheme list
" FIXED: 110803  reload error E127 "seems set background will reload the
                 colorscheme.  " unlet it or colorscheme will be reloaded.
"  DONE: 110803  presisitence of the s:num which will load it last time " let
                 s:num = exists("g:GALAXY_THEME_NUM") ? g:GALAXY_THEME_NUM
                 : 0 " it's not defined when colorscheme loaded!  " use cache
                 instead?
"  DONE: 110804  let the insert mode with themes
"  DONE: 110804  let s:list_insert_leave auto copy the current scheme
"  DONE: 110804  theme could use schemes 
"  DONE: 110804  add the g:galaxy_usr_dict and execute it
"  DONE: 110804  load cache and g: highlights and themes
" WKRND: 110804  echom will show mes box when vim start.
"  DONE: 110804  presistence file load
"  DONE: 110804  change the sequence of  the colors to  fg syn ech
                 bg dif
"  DONE: 110804  color name with dict
"  DONE: 110804  hl Themes  [shadowing,  coloring]
"  DONE: 110803  store it in cache or it would not load when starting " Don't
                 let it be mixed with g:
"  DONE: 110803  " Quick switch style key mapping.
"  DONE: 110803  " one function with link and highlight
"  DONE: 110803  store it in cache or it would not load when starting " Don't
                 let it be mixed with g:
"  DONE: 110803  " Quick switch style key mapping.
"  DONE: 110803  " one function with link and highlight
"  DONE: 110731  statusline color define in one place " guifg=NONE and 'null'
                 define of guifg(that will suceed previous value )
"  DONE: 110731  set background will reload the colorscheme.  switch with usr's
                 theme list
"  DONE: 110731  switch with keymapping
"  DONE: 110728  cterm support with colormath python 
"  DONE: 110728  calculate fg/bg_txt for terminal
------------------------------------------------------------------------------
LICENSE                                               *galaxy-license*

    Copyright 2011 Rykka Krn. All rights reserved.
    MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    }}}
==============================================================================
vim:tw=78:ft=help:
